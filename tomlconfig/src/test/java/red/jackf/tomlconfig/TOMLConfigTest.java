/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package red.jackf.tomlconfig;

import org.junit.Test;
import red.jackf.tomlconfig.data.TOMLValue;
import red.jackf.tomlconfig.exceptions.ParsingException;
import red.jackf.tomlconfig.exceptions.TokenizationException;
import red.jackf.tomlconfig.data.TOMLTable;
import red.jackf.tomlconfig.parser.TOMLParser;
import red.jackf.tomlconfig.reflections.ClassPopulator;
import red.jackf.tomlconfig.writer.TOMLWriter;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.stream.Collectors;

public class TOMLConfigTest {

    @Test
    public void testConfig() throws TokenizationException, ParsingException, ReflectiveOperationException {
        String file = new BufferedReader(new InputStreamReader(getClass().getResourceAsStream("/testfile4.toml"))).lines().collect(Collectors.joining("\n"));
        ExampleConfig config = new ExampleConfig();
        TOMLTable configTOML = (TOMLTable) new ClassPopulator().fromObject(config);
        //TOMLTable configTOML = new TOMLParser().parse(file);
        String text = new TOMLWriter(2, 80).writeToString(configTOML);
        TOMLValue parsed = new TOMLParser().parse(text);
        System.out.println(parsed);
        ExampleConfig parsedConfig = (ExampleConfig) new ClassPopulator().toObject(ExampleConfig.class, parsed);
        assert config != parsedConfig;
        assert config.equals(parsedConfig);
    }
}
